package ventura.soluciones.sunatws.client.production.cpr.service;


import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

import org.apache.log4j.Logger;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2016-01-18T18:40:44.605-05:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "cprService", 
                  wsdlLocation = "https://www.sunat.gob.pe/ol-ti-itemision-otroscpe-gem/billService?wsdl",
                  targetNamespace = "http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/") 
public class CPRService_Service extends Service {

	private static final Logger logger = Logger.getLogger(CPRService_Service.class);
	
    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "billService");
    public final static QName BillServicePort = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "BillServicePort");
    public final static QName BillServicePort0 = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "BillServicePort.0");
    
    
    /**
     * Instances default URL for WS.
     */
    static {
        URL url = null;
        try {
        	URL baseURL = ventura.soluciones.sunatws.client.production.cpr.service.CPRService_Service.class.getResource(".");
            url = new URL(baseURL,"https://www.sunat.gob.pe/ol-ti-itemision-otroscpe-gem/billService?wsdl");
        } catch (MalformedURLException e) {
        	logger.error("static() Can not initialize the default wsdl from 'https://www.sunat.gob.pe/ol-ti-itemision-otroscpe-gem/billService?wsdl'");
        	logger.error("static() MalformedURLException -->" + e.getMessage());
        }
        WSDL_LOCATION = url;
    }

    public CPRService_Service()
    {
    	 super(WSDL_LOCATION, SERVICE);
         if (logger.isDebugEnabled()) {logger.debug("+-CPRService_Service() URL Production-WS: " + WSDL_LOCATION);}	
    }
    
    /**
     * Constructor for CPRService_Service class.
     * 
     * @param wsdlLocation
     * 		WSDL location input.
     */
    
    public CPRService_Service(URL wsdlLocation)
    {
    	 super(wsdlLocation, SERVICE);
         if (logger.isDebugEnabled()) {logger.debug("+-CPRService_Service(URL) URL Production-WS: " + wsdlLocation);}
    }
    
    
    /**
     * Constructor for BillService_Service class.
     * 
     * @param wsdlLocation
     * 		WSDL location input.
     * @param serviceName
     * 		Service name input.
     */

    public CPRService_Service(URL wsdlLocation, QName serviceName)
    {
    	super(wsdlLocation, serviceName);
        if (logger.isDebugEnabled()) {logger.debug("+-CPRService_Service(URL, QName) URL Production-WS: " + wsdlLocation);}
    }
    
    /**
     * Constructor for BillService_Service class.
     * 
     * @param features
     * 		Web service feature input.
     */
    public CPRService_Service(WebServiceFeature ... features)
    {
        super(WSDL_LOCATION, SERVICE, features);
        if (logger.isDebugEnabled()) {logger.debug("+-CPRService_Service(WebServiceFeature...) URL Production-WS: " + WSDL_LOCATION);}
    }/**
     * Constructor for BillService_Service class.
     * 
     * @param wsdlLocation
     * 		WSDL location input.
     * @param features
     * 		Web service feature input.
     */
    public CPRService_Service(URL wsdlLocation, WebServiceFeature ... features)
    {
        super(wsdlLocation, SERVICE, features);
        if (logger.isDebugEnabled()) {logger.debug("+-CPRService_Service(URL, WebServiceFeature...) URL Production-WS: " + wsdlLocation);}
    } 
    

    /**
     * Constructor for BillService_Service class.
     * 
     * @param wsdlLocation
     * 		WSDL location input.
     * @param serviceName
     * 		Service name input.
     * @param features
     * 		Web service feature input.
     */
    public CPRService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features)
    {
        super(wsdlLocation, serviceName, features);
        if (logger.isDebugEnabled()) {logger.debug("+-CPRService_Service(URL, QName, WebServiceFeature...) URL Production-WS: " + wsdlLocation);}
    } 
    

    /**
     *
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort")
    public ventura.soluciones.sunatws.client.production.cpr.service.CPRService getBillServicePort() {
        return super.getPort(BillServicePort, ventura.soluciones.sunatws.client.production.cpr.service.CPRService.class);
    }

    /**
     * This method gets the bill service port.
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *     Supported features not in the <code>features</code> parameter will have 
     *     their default values.
     * @return
     *     Returns the bill service port.
     */
    @WebEndpoint(name = "BillServicePort")
    public ventura.soluciones.sunatws.client.production.cpr.service.CPRService getBillServicePort(WebServiceFeature... features) {
        return super.getPort(BillServicePort, ventura.soluciones.sunatws.client.production.cpr.service.CPRService.class, features);
    }


    /**
     * This method gets the bill service port.
     * 
     * @return
     *     Returns the bill service port.
     */
    @WebEndpoint(name = "BillServicePort.0")
    public ventura.soluciones.sunatws.client.production.cpr.service.CPRService getBillServicePort0() {
        return super.getPort(BillServicePort0, ventura.soluciones.sunatws.client.production.cpr.service.CPRService.class);
    }

    /**
     * This method gets the bill service port.
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *     Supported features not in the <code>features</code> parameter will have 
     *     their default values.
     * @return
     *     Returns the bill service port.
     */
    @WebEndpoint(name = "BillServicePort.0")
    public ventura.soluciones.sunatws.client.production.cpr.service.CPRService getBillServicePort0(WebServiceFeature... features) {
        return super.getPort(BillServicePort0, ventura.soluciones.sunatws.client.production.cpr.service.CPRService.class, features);
    }

}
